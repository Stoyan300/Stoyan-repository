---
- hosts: host
  become: true
  tasks:
  #ADD USER stoyan 
  - name: Add a new user named stoyan
    user:
              name: stoyan
              password: '$6$NRBmEN6H05$V1T9M5Cv.R8NHL9VAt2OzTHMelHilyfyd.pNwXyzQsNaCuDXlDQw2pm0rZP4UuQ9tmhwl80qBcQz.OhZtpJKQ/'
              state: present
              shell: /bin/bash       # Defaults to /bin/bash
              system: no             # Defaults to no
              createhome: yes        # Defaults to yes
              home: /home/stoyan      # Defaults to /home/<username>  
   #DOCKER           
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
  - name: Add an apt signing key for Docker
    apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
  - name: Add apt repository for stable version
    apt_repository:
          repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
          state: present  
    
  - name: APT UPDATE
    command: apt update        
  - name: Install docker and its dependecies
    apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status  
  - name: Disable swap
    command: swapoff -a    
  
  - name: Add stoyan user to docker group
    user:
      name: stoyan
      group: docker    
    
 #----------------------------------------------------------------
 #KUBE
  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present
  - name: Adding apt repository for Kubernetes
    apt_repository:
     repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
     state: present
     filename: kubernetes.list
  - name: Install Kubernetes binaries
    apt: 
     name: "{{ packages }}"
     state: present
     update_cache: yes
    vars:
     packages:
     - kubelet 
     - kubeadm 
     - kubectl
    register: installed
  - name: Restart kubelet
    service:
     name: kubelet
     daemon_reload: yes
     state: restarted
  handlers:
  - name: docker status
    service: name=docker state=started
#KUBEADM INIT
- hosts: master
  become: true
  gather_facts: false
  tasks:
   
   - name: Initialize the Kubernetes cluster using kubeadm
     command: kubeadm init --pod-network-cidr=10.244.0.0/16 
     when: installed is changed
   - name: Create .kube folder
     become: false
     file:
       path: /home/stoyan/.kube
       state: directory  
   - name: Copy admin.conf file
     copy: remote_src=True src=/etc/kubernetes/admin.conf dest=/home/stoyan/.kube/config
   - name: Change admin.conf owner
     file:
       path: /home/stoyan/.kube/config
       owner: stoyan
       group: stoyan  
#POD-NETWORK
   - name: Install calico pod network
     become_user: stoyan
     command: kubectl apply -f https://docs.projectcalico.org/v3.10/manifests/calico.yaml
#JOIN command   
   - name: Generate join command
     command: kubeadm token create --print-join-command
     register: join_command
   - name: set join command
     set_fact:
       join_command: "{{ join_command.stdout_lines[0] }}"  
#save JOIN command on local machine  
       #- name: Copy join command to local file
    # copy: 
     #    dest: "/root/task/join" 
      #   content: "{{ join_command.stdout_lines[0] }}"
     #become: false
     #delegate_to: localhost
 
 #JOIN WORKER TO CLUSTER      
- hosts: worker
  become: true
  tasks:
   - name: join worker
     shell: "{{ hostvars['master'].join_command }}"
     ignore_errors: yes
  
- hosts: master
  become: yes
  become_user: stoyan
  tasks:

    - name: label worker
      command: kubectl label node worker node-role.kubernetes.io/worker=worker
    
    #install helm
- hosts: master
  tasks:

    - name: installing helm
      command: curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    - name: installing helm
      command: chmod 777 get_helm.sh
    - name: installing helm
      command: ./get_helm.sh
    # install jdk
- hosts: master
  tasks:
    - name: installing java
      command: apt-get install openjdk-8-jre -y      
    #ssh-keygen
- hosts: master
  become: yes
  become_user: stoyan
  tasks:
    - name: mkdir .ssh
      command: mkdir /home/stoyan/.ssh
    - openssh_keypair:
        path: /home/stoyan/.ssh/id_rsa
    - name: touch authorized_keys
      command: touch /home/stoyan/.ssh/authorized_keys 
    - name: cat id_rsa.pub
      shell: cd /home/stoyan/.ssh/ && cat /home/stoyan/.ssh/id_rsa.pub >> authorized_keys  
